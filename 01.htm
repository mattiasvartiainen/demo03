<style>
#b {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, #456, #200);
}
</style>
<canvas id="b"></canvas>
<script>
c = b.getContext('2d');
MAX = 96;

onload = function update() {
    requestAnimationFrame(update);

    if(!window.time) {
        time = 0;
        frame = 0;
        timeNextFrame = 0;
        vines = [{x:0,y:0,a:0,ai:0,w:8,p:[],l:MAX}];
    }

    currentTime = performance.now() / 1000;
    while(time < currentTime) {
        while(time < timeNextFrame) {
            time += 1 / 16384;
        }
        frame++;
        timeNextFrame += 1/60;

        // Update visuals
        vines.forEach(v => {
            dx = Math.cos(v.a) * v.w / 2;
            dy = Math.sin(v.a) * v.w / 2;
            v.x += dx;
            v.y += dy;
            v.a += v.ai;
            v.p.splice(0, v.p.length - 60   );
            v.p.push({x:v.x, y:v.y, dx:dx, dy:dy});

            if(frame % 30 == 0) {
                v.ai = Math.random()-.5;
            }
        })
    }

    H = b.height = 512;
    W = b.width = 0 | H * innerWidth / innerHeight;
    c.translate(W/2, H/2);
    vines.forEach(v => {
        if(v.w == 8) {
            c.translate(-v.x, -v.y);
        }
        c.strokeStyle = '#fff';
        c.beginPath();
        l = v.p.length - 1;
        for(i=l; p=v.p[i]; i--) {
            c.lineTo(p.x, p.y);
        }
        c.stroke();
        //c.strokeText([W,H, frame], 0, 0);
    })
}
</script>